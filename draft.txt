/*function getWebglPos(event, context) {
    var clientX = event.clientX;
    var clientY = event.clientY;

    var midX = context.width / 2,
        midY = context.height / 2;

    var rect = event.target.getBoundingClientRect();

    x = ((clientX - rect.left) - midX) / midX;
    y = (midY - (clientY - rect.top)) / midY;

    return { x: x, y: y };
}

var that = this;
var lastDownTarget;
var x, y;
var isDrawing = false;

canvas.addEventListener('mousedown', function(e) {
    isDrawing = true;
    // Convert mouse position (window coordinates) to WebGL canvas coordinates
    x = getWebglPos(e, canvas).x;
    y = getWebglPos(e, canvas).y;

    if (!that.star) {
        that.star = new Star([0, 0, 0], 0.2, 0.4, 5, false, [x, y, 0]);
        that.objectsContainer.push(that.star);
    }
}, false);

canvas.addEventListener('mousemove', function(e) {
    if (isDrawing === true) {
        that.star.pos3d = [getWebglPos(e, canvas).x, getWebglPos(e, canvas).y, 0];
    }
}, false);

canvas.addEventListener('mouseup', function(e) {
    isDrawing = false;
}, false);*/

/*
    //Slider
    var sliderZ = document.getElementById("rotValSliderZ");
    var outputZ = document.getElementById("resultZ");
    var angleRadZ = sliderZ.value * Math.PI / 180;
    sliderZ.oninput = function() {
        outputZ.innerHTML = this.value;
        angleRadZ = parseInt(this.value) * Math.PI / 180;
    };

    var sliderX = document.getElementById("rotValSliderX");
    var outputX = document.getElementById("resultX");
    var angleRadX = sliderX.value * Math.PI / 180;
    sliderX.oninput = function() {
        outputX.innerHTML = this.value;
        angleRadX = parseInt(this.value) * Math.PI / 180;
    };

    var tMatRotZ = this.sceneControl.setRotationMat("z", angleRadZ);
    var tMatRotX = this.sceneControl.setRotationMat("x", angleRadX);
    var tMatRotXZ = this.sceneControl.setRotationMatXZ(tMatRotX, tMatRotZ);

    this.sceneControl.setModelViewMat(gl, shaderProgram, mvMat, mvMat, tMatRotXZ);

    //Projection Matrix
    var rangeSlider = document.getElementById("rangeSlider");
    var rangeHtmlValue = document.getElementById("rangeValue");
    var range = rangeSlider.value;
    rangeSlider.oninput = function() {
        rangeHtmlValue.innerHTML = this.value;
        range = this.value;
    };

    this.sceneControl.setProjMatOrtho(gl, shaderProgram, range); */